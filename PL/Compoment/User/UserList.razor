@page "/users"
@using BUS.ViewModel.User
@using PL.Service.Interface
@inject IUserService UserService
@inject NavigationManager NavigationManager

<h3>Danh sách người dùng</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Name</th>
                <th>Status</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@user.Name</td>
                    <td>@user.Status</td>
                    <td>@user.PhoneNumber</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => ViewDetails(user.UserId)">Xem chi tiết</button>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.UserId)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-success" @onclick="CreateNewUser">Thêm người dùng</button>

@code {
    private IEnumerable<UserVM> users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAllAsync();
    }

    private async Task ViewDetails(int userId)
    {
        NavigationManager.NavigateTo($"/users/{userId}");
    }

    private async Task DeleteUser(int userId)
    {
        await UserService.DeleteAsync(userId);
        users = await UserService.GetAllAsync();
    }

    private void CreateNewUser()
    {
        NavigationManager.NavigateTo("/users/create");
    }
}
